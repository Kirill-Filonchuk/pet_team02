{"version":3,"file":"static/js/787.11cb493e.chunk.js","mappings":"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","sources":["components/FormValidation/FormValidation.styled.js","components/FormValidation/FormValidation.jsx","components/LoginForm/LoginForm.styled.js","components/RegisterForm/NavigationForm/NavigationForm.styled.js","components/RegisterForm/NavigationForm/NavigationForm.jsx","components/RegisterForm/MultiForm/MultiForm.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst Error = styled.div`\n  position: absolute;\n  width: 100%;\n  text-align: center;\n  left: 50%;\n  top: 45px;\n  transform: translateX(-50%);\n  font-size: 10px;\n  color: red;\n`;\n\nexport { Error };\n","import * as yup from 'yup';\nimport { ErrorMessage } from 'formik';\nimport { Error } from './FormValidation.styled';\n\nconst emailValid =\n  /^[^-._]{1}[A-Za-z0-9._-]{1,}@[^-._]{1}[A-Za-z0-9.-]{0,}\\.[A-Za-z]{2,4}$/;\nconst nameValid = /^[a-zA-zа-яіїєА-ЯІЇЄ ]+$/;\nconst passwordValid = /^[^ ]{7,18}$/;\nconst phoneValid = /^[+]{1}[0-9]{12}$/;\nconst locationValid = /^[a-zA-Zа-яіїєА-ЯІЇЄ]+[,][ ][a-zA-Zа-яіїєА-ЯІЇЄ]+$/;\n\nconst validationLogin = yup.object().shape({\n  email: yup\n    .string()\n    .required('Email field is required')\n    .matches(emailValid, \"Email must contain '@', example: user@mail.com \")\n    .email(),\n  password: yup\n    .string()\n    .matches(passwordValid, 'Please enter min 7 characters and max 18')\n    .max(18, 'Please enter 18 characters or less')\n    .min(7, 'Enter 7 or more characters')\n    .required('Password field is required'),\n});\n\nconst validationRegisterStepOne = yup.object().shape({\n  email: yup\n    .string()\n    .required('Email field is required')\n    .matches(emailValid, \"Email must contain '@', example: user@mail.com \")\n    .email(),\n  password: yup\n    .string()\n    .matches(passwordValid, 'Please enter min 7 characters and max 18')\n    .max(18, 'Please enter 18 characters or less')\n    .min(7, 'Enter 7 or more characters')\n    .required('Password field is required'),\n  confirm_password: yup.string().when('password', {\n    is: val => (val && val.length > 0 ? true : false),\n    then: () =>\n      yup\n        .string()\n        .oneOf([yup.ref('password')], ' Please confirm your password'),\n  }),\n});\n\nconst validationRegisterStepTwo = yup.object().shape({\n  name: yup\n    .string()\n    .required('Name field is required')\n    .matches(nameValid, 'Name field can contain any letters'),\n  location: yup\n    .string()\n    .matches(\n      locationValid,\n      'Location field must contain two words separated by a comma'\n    )\n    .required('Location field is required'),\n  phone: yup\n    .string()\n    .matches(phoneValid, 'The phone number must be in the format +380123456789')\n    .required('Phone number field is required'),\n});\n\nconst InputError = ({ name }) => {\n  return (\n    <Error>\n      <ErrorMessage\n        name={name}\n        render={message => <p style={{ margin: 0 }}>{message}</p>}\n      />\n    </Error>\n  );\n};\n\nexport {\n  validationLogin,\n  InputError,\n  validationRegisterStepOne,\n  validationRegisterStepTwo,\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nimport { Link } from 'react-router-dom';\n\n// import BgImage from \"./img/bgMobile.svg\"\n//  background-image: url(${BgImage});\n\nconst Title = styled.h2`\n  text-align: center;\n  color: #111111;\n  font-size: 24px;\n  line-height: 33px;\n  letter-spacing: 0.04em;\n  margin: 100px 0 40px 0;\n`;\nconst Wrapper = styled.div`\n  padding: 0 20px;\n\n  /* background-repeat: no-repeat;\n  background-position: center bottom;\n  background-size: contain; */\n`;\n\nconst FormAuth = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n\nconst Label = styled.label`\n  position: relative;\n`;\nconst Input = styled(Field)`\n  padding: 0 14px;\n  box-sizing: border-box;\n  min-width: 100%;\n  height: 40px;\n  outline: 1px solid rgba(245, 146, 86, 0.5);\n  border: none;\n  border-radius: 40px;\n`;\n\nconst IconShow = styled.span`\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  top: 50%;\n  transform: translateY(-50%);\n  right: 10px;\n  color: grey;\n`;\n\nconst BtnFormSubmit = styled.button`\n  display: flex;\n  height: 44px;\n  border-radius: 40px;\n  margin-top: 16px;\n  margin-bottom: 40px;\n  color: #fff;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid #f59256;\n  background-color: #f59256;\n`;\n\nconst TextLink = styled.p`\n  text-align: center;\n  margin: 0;\n`;\n\nconst LinkToRegister = styled(Link)`\n  color: rgba(48, 145, 235, 1);\n`;\nexport {\n  Wrapper,\n  Title,\n  FormAuth,\n  Label,\n  Input,\n  IconShow,\n  BtnFormSubmit,\n  TextLink,\n  LinkToRegister,\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst ButtonBack = styled.button`\n  display: flex;\n  width: 100%;\n  height: 44px;\n  border-radius: 40px;\n  color: #000;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid #f59256;\n  background-color: transparent;\n`;\n\nconst LinkToLogin = styled(NavLink)`\n  margin-left: 5px;\n  text-decoration-line: underline;\n`;\n\nconst StepOne = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nconst StepTwo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n`;\n\nexport { ButtonBack, LinkToLogin, StepOne, StepTwo };\n","import { StepOne, StepTwo, ButtonBack } from './NavigationForm.styled';\nimport { BtnFormSubmit, TextLink } from 'components/LoginForm/LoginForm.styled';\n\nconst FormNavigation = props => {\n  return (\n    <>\n      <StepOne>\n        <BtnFormSubmit style={{marginBottom: props.isLastStep ? 0:40}} type=\"submit\" name=\"register\">\n          {props.isLastStep ? 'Register' : 'Next'}\n        </BtnFormSubmit>\n      </StepOne>\n\n      {props.hasPrevious && (\n        <StepTwo>\n          <ButtonBack type=\"button\" name=\"back\" onClick={props.onBackClick}>\n            Back\n          </ButtonBack>\n        </StepTwo>\n      )}\n\n      <TextLink>\n        <span>Already have an account?</span>\n        {/* <LinkToLogin to=\"/login\">Login</LinkToLogin> */}\n        <span> Login</span>\n      </TextLink>\n    </>\n  );\n};\n\nexport default FormNavigation;\n","import React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport { FormAuth, Wrapper } from 'components/LoginForm/LoginForm.styled';\nimport FormNavigation from '../NavigationForm';\n\nconst MultiStepForm = ({ children, initialValues, onSubmit }) => {\n  const [stepNumber, setStepNumber] = useState(0);\n  const steps = React.Children.toArray(children);\n\n  const [snapshot, setSnapshot] = useState(initialValues);\n\n  const step = steps[stepNumber];\n  const totalSteps = steps.length;\n  const isLastStep = stepNumber === totalSteps - 1;\n\n  const next = values => {\n    setSnapshot(values);\n    setStepNumber(stepNumber + 1);\n  };\n\n  const previous = values => {\n    setSnapshot(values);\n    setStepNumber(stepNumber - 1);\n  };\n\n  const handleSubmit = async (values, actions) => {\n    if (step.props.onSubmit) {\n      await step.props.onSubmit(values);\n    }\n\n    if (isLastStep) {\n      return onSubmit(values, actions);\n    } else {\n      actions.setTouched({});\n      next(values);\n    }\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={snapshot}\n        onSubmit={handleSubmit}\n        validationSchema={step.props.validationSchema}\n      >\n        {formik => (\n          <Wrapper>\n            <FormAuth onSubmit={formik.handleSubmit}>\n              {step}\n\n              <FormNavigation\n                isLastStep={isLastStep}\n                hasPrevious={stepNumber > 0}\n                onBackClick={() => previous(formik.values)}\n              />\n            </FormAuth>\n          </Wrapper>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nconst FormStep = ({ stepName = '', children }) => children;\n\nexport { MultiStepForm, FormStep };\n","import { useState } from 'react';\n//import { useDispatch } from 'react-redux';\n// import { register } from 'redux/auth/operations';\nimport {\n  validationRegisterStepOne,\n  validationRegisterStepTwo,\n  InputError,\n} from 'components/FormValidation';\nimport { MultiStepForm, FormStep } from './MultiForm';\nimport { BiShow, BiHide } from 'react-icons/bi';\n\nimport {\n  Wrapper,\n  Title,\n  Label,\n  Input,\n  IconShow,\n} from 'components/LoginForm/LoginForm.styled';\n\nconst RegisterForm = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const initialValues = {\n    email: '',\n    password: '',\n    confirm_password: '',\n    name: '',\n    location: '',\n    phone: '',\n  };\n  // const dispatch = useDispatch();\n\n  const handleSubmit = (values, actions) => {\n    console.log(values);\n    actions.resetForm();\n  };\n\n  const togglePassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const toggleConfirmPassword = () => {\n    setShowConfirmPassword(!showConfirmPassword);\n  };\n\n  return (\n    <Wrapper>\n      <Title>Registration</Title>\n      <MultiStepForm initialValues={initialValues} onSubmit={handleSubmit}>\n        <FormStep\n          stepName=\"UserMain\"\n          validationSchema={validationRegisterStepOne}\n        >\n          <Label>\n            <Input\n              autoComplete=\"off\"\n              type=\"text\"\n              name=\"email\"\n              placeholder=\"Email\"\n            />\n            <InputError name=\"email\" />\n          </Label>\n          <Label>\n            <Input\n              type={showPassword ? 'text' : 'password'}\n              name=\"password\"\n              placeholder=\"Password\"\n              autoComplete=\"off\"\n            />\n            <IconShow onClick={togglePassword}>\n              {showPassword ? <BiHide size={24} /> : <BiShow size={24} />}\n            </IconShow>\n            <InputError name=\"password\" />\n          </Label>\n          <Label>\n            <Input\n              type={showConfirmPassword ? 'text' : 'password'}\n              name=\"confirm_password\"\n              placeholder=\"Confirm Password\"\n              autoComplete=\"off\"\n            />\n            <IconShow onClick={toggleConfirmPassword}>\n              {showConfirmPassword ? (\n                <BiHide size={24} />\n              ) : (\n                <BiShow size={24} />\n              )}\n            </IconShow>\n            <InputError name=\"confirm_password\" />\n          </Label>\n        </FormStep>\n\n        <FormStep\n          stepName=\"UserLocation\"\n          validationSchema={validationRegisterStepTwo}\n        >\n          <Label>\n            <Input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Name\"\n              autoComplete=\"off\"\n            />\n            <InputError name=\"name\" />\n          </Label>\n          <Label>\n            <Input\n              type=\"text\"\n              name=\"location\"\n              placeholder=\"City, region\"\n              autoComplete=\"off\"\n            />\n            <InputError name=\"location\" />\n          </Label>\n          <Label>\n            <Input\n              type=\"text\"\n              name=\"phone\"\n              placeholder=\"Mobile phone\"\n              autoComplete=\"off\"\n            />\n            <InputError name=\"phone\" />\n          </Label>\n        </FormStep>\n      </MultiStepForm>\n    </Wrapper>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from \"components/RegisterForm\";\n\nconst RegisterPage = () => {\n  return (\n    <RegisterForm/>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["Error","styled","emailValid","passwordValid","validationLogin","yup","shape","email","required","matches","password","max","min","validationRegisterStepOne","confirm_password","when","is","val","length","then","oneOf","validationRegisterStepTwo","name","location","phone","InputError","render","message","style","margin","Title","Wrapper","FormAuth","Form","Label","Input","Field","IconShow","BtnFormSubmit","TextLink","Link","ButtonBack","StepOne","NavLink","StepTwo","props","marginBottom","isLastStep","type","hasPrevious","onClick","onBackClick","MultiStepForm","children","initialValues","onSubmit","useState","stepNumber","setStepNumber","steps","React","snapshot","setSnapshot","step","totalSteps","next","values","handleSubmit","actions","setTouched","validationSchema","formik","FormStep","stepName","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","console","log","resetForm","autoComplete","placeholder","size"],"sourceRoot":""}